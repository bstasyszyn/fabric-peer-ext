# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0

name: $(SourceBranchName)-$(Date:yyyyMMdd).$(Rev:r)
trigger:
  - main
pr:
  - main

variables:
  GO_VERSION: 1.14.4
  GOPATH: $(Agent.BuildDirectory)/go

jobs:
  - job: UnitTest
    condition: in(variables['test-type'],'','unit-test') # Run if test-type is not set or if test-type is 'unit-test'
    pool:
      vmImage: ubuntu-20.04
    timeoutInMinutes: 30
    steps:
    - template: azp-dependencies.yml
    - checkout: self
    - script: |
        # TODO: remove when fabric-mod supports sampleconfig outside GOPATH
        mkdir -p ${GOPATH}/src/github.com/trustbloc/fabric-peer-ext/pkg/testutil
        cp -R pkg/testutil/sampleconfig ${GOPATH}/src/github.com/trustbloc/fabric-peer-ext/pkg/testutil
        make unit-test
      displayName: Run checks and unit test
    - script: bash <(curl https://codecov.io/bash) -t $CODECOV_UPLOAD_TOKEN
      env:
        CODECOV_UPLOAD_TOKEN: $(CODECOV_UPLOAD_TOKEN)
      displayName: Upload coverage to Codecov

  - job: BDDTest_lscc
    condition: in(variables['test-type'],'','bdd-test') # Run if test-type is not set or if test-type is 'bdd-test'
    pool:
      vmImage: ubuntu-20.04
    strategy:
      parallel: 3
    timeoutInMinutes: 60
    steps:
    - template: azp-dependencies.yml
    - checkout: self
    - script: FIXTURES_VERSION=v1.4 make bddtests
      displayName: Run BDD tests (lscc chaincode)
    - publish: test/bddtests/docker-compose-$(System.JobPositionInPhase).log
      artifact: docker-compose-$(System.JobPositionInPhase).log
      condition: always()

  - job: BDDTest_lifecycle
    condition: in(variables['test-type'],'','bdd-test') # Run if test-type is not set or if test-type is 'bdd-test'
    pool:
      vmImage: ubuntu-20.04
    strategy:
      parallel: 3
    timeoutInMinutes: 60
    steps:
      - template: azp-dependencies.yml
      - checkout: self
      - script: FIXTURES_VERSION=v2.2 make bddtests
        displayName: Run BDD tests (lifecycle chaincode)
      - publish: test/bddtests/docker-compose-lc_$(System.JobPositionInPhase).log
        artifact: docker-compose-lc_$(System.JobPositionInPhase).log
        condition: always()

  - job: FabricUnitTest
    condition: eq(variables['test-type'],'fabric-unit-test') # Run only if test-type is 'fabric-unit-test'
    pool:
      vmImage: ubuntu-20.04
    timeoutInMinutes: 60
    steps:
    - template: azp-dependencies.yml
    - checkout: self
    - script: ./ci/scripts/setup_hsm.sh
      displayName: Install SoftHSM
    - script: make fabric-unit-test
      displayName: Run Fabric unit tests
