#
# Copyright IBM Corp, SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

services:
  peer:
    image: ${TRUSTBLOCK_NS}/${FABRIC_PEER_EXT_FIXTURE_IMAGE}:latest
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=comm.grpc.server=error:cauthdsl=warn:gossip=warn:grpc=warn:ledger=info:msp=warn:policies=warn:peer.gossip=warn:endorser=warn:ext_gossip=info:ext_blockvisitor=info:ext_offledger=info:ext_dispatcher=info:ext_multirequest=info:chaincode=info:cceventmgmt=info:privacyenabledstate=info:statecouchdb=info:ext_gossip_state=debug:ext_blkstorage=info:ext_validation=debug:lockbasedtxmgr=info:committer.txvalidator=info:gossip.privdata=info:info
      ## the following setting redirects chaincode container logs to the peer container logs
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_CLIENTCERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_CLIENTKEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_TLS_CLIENTAUTHREQUIRED=true
      - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/fabric/tls/ca.crt /etc/hyperledger/mutual_tls/peer/ca.crt
      - CORE_PEER_SKIPCHECKFORDUPTXNID=true
      # override chaincode images
      - CORE_CHAINCODE_BUILDER=${TRUSTBLOCK_NS}/${FABRIC_BUILDER_FIXTURE_IMAGE}:latest
      - CORE_CHAINCODE_GOLANG_RUNTIME=${FABRIC_NS}/${FABRIC_BASEOS_FIXTURE_IMAGE}:${FABRIC_BASEOS_FIXTURE_TAG}
      # metrics config
      - CORE_METRICS_PROVIDER=prometheus
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:8080
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fixtures_default
      # CouchDB Settings
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_TRANSIENTDATA_CACHESIZE=1000
      - CORE_LEDGER_TRANSIENTDATA_CLEANUPEXPIRED_INTERVAL=5s
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=cdbadmin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=secret
      # All peers in both orgs share the same CouchDB instance. The database names are prefixed by the MSP ID to avoid collisions.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=shared.couchdb.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_CACHESIZE=64
      - CORE_LEDGER_STATE_DBCONFIG_PARTITIONTYPE=MSP
      - CORE_LEDGER_STATE_DBCONFIG_CACHE_PREPOPULATE=true
      - CORE_LEDGER_STATE_DBCONFIG_CACHE_GOSSIPTIMEOUT=500ms
      - CORE_LEDGER_STATE_DBCONFIG_CACHE_RETENTIONSIZE=20
      - CORE_PEER_GOSSIP_USELEADERELECTION=false
      # The following DCAS value is set for testing purposes. Typically you should not need to override the defaults
      - CORE_COLL_DCAS_MAXBLOCKSIZE=32
      #- CORE_COLL_DCAS_RAWLEAVES=true
      #- CORE_COLL_DCAS_BLOCKLAYOUT=trickle
      #- CORE_COLL_DCAS_MAXLINKSPERBLOCK=3
      - CORE_LEDGER_STORAGE_BLOCKSTORE_CACHESIZE_BLOCKBYNUM=20
      - CORE_LEDGER_STORAGE_BLOCKSTORE_CACHESIZE_BLOCKBYHASH=20

    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    tty: true
    volumes:
        - /var/run/:/host/var/run/
        - ./fabric/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt:/etc/hyperledger/fabric/tls/orderer-ca-cert.pem
        - ./fabric/crypto-config/peerOrganizations/tls.example.com/users/User1@tls.example.com/tls:/etc/hyperledger/mutual_tls/peer
        - ${COMPOSE_DIR}/config/fabric/core.yaml:/etc/hyperledger/fabric/core.yaml
